{"version":3,"file":"index-b97b528a.js","sources":["../../../frontend/copywrite-app/src/assets/github.svg","../../../frontend/copywrite-app/src/pages/layout/Layout.tsx","../../../frontend/copywrite-app/src/components/Editor/Editor.tsx","../../../frontend/copywrite-app/src/api/api.tsx","../../../frontend/copywrite-app/src/pages/copywrite/Copywrite.tsx","../../../frontend/copywrite-app/src/main.tsx"],"sourcesContent":["export default \"__VITE_ASSET__4e6ad5ae__\"","import { Outlet, NavLink, Link } from \"react-router-dom\";\r\n\r\nimport github from \"../../assets/github.svg\";\r\n\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <div className={styles.layout}>\r\n            <header className={styles.header} role={\"banner\"}>\r\n                <div className={styles.headerContainer}>\r\n                    <Link to=\"/\" className={styles.headerTitleContainer}>\r\n                        <h3 className={styles.headerTitle}>GPT + Dalle2 | Sample</h3>\r\n                    </Link>\r\n                    <nav>\r\n                        <ul className={styles.headerNavList}>\r\n                            <li>\r\n                                <NavLink to=\"/\" className={({ isActive }) => (isActive ? styles.headerNavPageLinkActive : styles.headerNavPageLink)}>\r\n                                    Copywriting\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className={styles.headerNavLeftMargin}>\r\n                                <a href=\"https://github.com/richardeee/CopywriteGPT\" target={\"_blank\"} title=\"Github repository link\">\r\n                                    <img\r\n                                        src={github}\r\n                                        alt=\"Github logo\"\r\n                                        aria-label=\"Link to github repository\"\r\n                                        width=\"20px\"\r\n                                        height=\"20px\"\r\n                                        className={styles.githubLogo}\r\n                                    />\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <h3 className={styles.headerRightText}>Azure ChatGPT + Dall-E2</h3>\r\n                </div>\r\n            </header>\r\n\r\n            <Outlet />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport styles from \"./Editor.module.css\";\r\n\r\ninterface CustomCKEditorProps {\r\n  data: string;\r\n  onChange: (newData: string) => void;\r\n}\r\nconst modules = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, false] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n}\r\n\r\nconst formats = [\r\n  'header',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image'\r\n]\r\n\r\nexport const Editor = ({ data, onChange }: CustomCKEditorProps) => {\r\n  return (\r\n    <div className={styles.ckeditor}>\r\n      <ReactQuill value={data} onChange={onChange} theme=\"snow\" modules={modules} formats={formats}/>\r\n    </div>\r\n  );\r\n};\r\n","import { CopywriteRequest, CopywriteResponse} from \"./models\";\r\n\r\nexport async function generateApi(options: CopywriteRequest): Promise<CopywriteResponse> {\r\n    const response = await fetch(\"/generate\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            approach: options.approach,\r\n            title: options.title,\r\n            title_description: options.titleDescription,\r\n            overrides: {\r\n                paragraphs: options.overrides?.paragraphs,\r\n                max_paragraph_length: options.overrides?.maxParagraphLength,\r\n                use_dalle: options.overrides?.useDalle,\r\n                art_style: options.overrides?.artStyle\r\n            }\r\n        })\r\n    });\r\n    const parsedResponse: CopywriteResponse = await response.json();\r\n    if (response.status > 299 || !response.ok) {\r\n        throw Error(parsedResponse.error || \"Unknown error\");\r\n    }\r\n\r\n    return parsedResponse;\r\n}","import { useState } from \"react\";\r\nimport {\r\n  Pivot,\r\n  PivotItem,\r\n  Position,\r\n  Separator,\r\n  Checkbox,\r\n  Panel,\r\n  DefaultButton,\r\n  TextField,\r\n  SpinButton,\r\n  Text,\r\n  PrimaryButton,\r\n  ITextProps,\r\n  Spinner,\r\n  Label,\r\n  Stack,\r\n  IStackTokens,\r\n  Dropdown,\r\n  IDropdownOption,\r\n  MessageBar,\r\n  MessageBarType,\r\n} from \"@fluentui/react\";\r\nimport { useBoolean } from \"@fluentui/react-hooks\";\r\nimport { Icon } from \"@fluentui/react/lib/Icon\";\r\n\r\nimport { Editor } from \"../../components/Editor\";\r\nimport styles from \"./Copywrite.module.css\";\r\nimport { generateApi, CopywriteRequest } from \"../../api\";\r\n\r\nconst buttonStyles = { root: { marginRight: 8 } };\r\nconst verticalGapStackTokens: IStackTokens = {\r\n  childrenGap: 10,\r\n  padding: 10,\r\n};\r\n\r\nconst Copywrite = () => {\r\n  const [\r\n    isConfigPanelOpen,\r\n    { setTrue: setIsConfigPanelOpen, setFalse: dismissPanel },\r\n  ] = useBoolean(false);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [titleDescription, setTitleDescription] = useState<string>(\"\");\r\n  const [paragraphs, setParagraphs] = useState<number>(5);\r\n  const [maxParagraphLength, setMaxParagraphLength] = useState<number>(100);\r\n  const [useDalle, setUseDalle] = useState<boolean>(true);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<unknown>();\r\n  const [copywriteHTML, setCopywriteHTML] = useState<string>(\"\");\r\n  const [artStyle, setArtStyle] = useState<string[]>([\"Landscape Photography\"]);\r\n\r\n  const art_options = [\r\n    { key: \"Baroque\", text: \"巴洛克风格\" },\r\n    { key: \"Rococo\", text: \"洛可可风格\" },\r\n    { key: \"Romanticism\", text: \"浪漫主义\" },\r\n    { key: \"Realism\", text: \"现实主义\" },\r\n    { key: \"Impressionism\", text: \"印象派\" },\r\n    { key: \"Post-Impressionism\", text: \"后印象派\" },\r\n    { key: \"Expressionism\", text: \"表现主义\" },\r\n    { key: \"Fauvism\", text: \"野兽派\" },\r\n    { key: \"Cubism\", text: \"立体主义\" },\r\n    { key: \"Futurism\", text: \"未来主义\" },\r\n    { key: \"Dadaism\", text: \"达达主义\" },\r\n    { key: \"Surrealism\", text: \"超现实主义\" },\r\n    { key: \"Abstract Expressionism\", text: \"抽象表现主义\" },\r\n    { key: \"Pop Art\", text: \"波普艺术\" },\r\n    { key: \"Op Art\", text: \"视觉艺术\" },\r\n    { key: \"Minimalism\", text: \"极简主义\" },\r\n    { key: \"Conceptual Art\", text: \"观念艺术\" },\r\n    { key: \"Photorealism\", text: \"超写实主义\" },\r\n    { key: \"Neo-Expressionism\", text: \"新表现主义\" },\r\n    { key: \"Neo-Pop Art\", text: \"新波普艺术\" },\r\n    { key: \"Hyperrealism\", text: \"超现实主义\" },\r\n    { key: \"Graffiti Art\", text: \"涂鸦艺术\" },\r\n    { key: \"Street Art\", text: \"街头艺术\" },\r\n    { key: \"Outsider Art\", text: \"非主流艺术\" },\r\n    { key: \"Feminist Art\", text: \"女性主义艺术\" },\r\n    { key: \"Environmental Art\", text: \"环境艺术\" },\r\n    { key: \"Land Art\", text: \"土地艺术\" },\r\n    { key: \"Body Art\", text: \"身体艺术\" },\r\n    { key: \"Performance Art\", text: \"行为艺术\" },\r\n    { key: \"New Media Art\", text: \"新媒体艺术\" },\r\n    { key: \"Installations Art\", text: \"装置艺术\" },\r\n    { key: \"Video Art\", text: \"录像艺术\" },\r\n    { key: \"Conceptual Photography\", text: \"观念摄影\" },\r\n    { key: \"Documentary Photography\", text: \"纪实摄影\" },\r\n    { key: \"Fine Art Photography\", text: \"艺术摄影\" },\r\n    { key: \"Street Photography\", text: \"街头摄影\" },\r\n    { key: \"Portrait Photography\", text: \"肖像摄影\" },\r\n    { key: \"Landscape Photography\", text: \"风景摄影\" },\r\n    { key: \"Still Life Photography\", text: \"静物摄影\" },\r\n    { key: \"Graphic Design\", text: \"平面设计\" },\r\n    { key: \"Motion Graphics\", text: \"动态图形设计\" },\r\n    { key: \"Art Deco\", text: \"装饰艺术\" },\r\n    { key: \"Arts and Crafts\", text: \"艺术与手工艺\" },\r\n    { key: \"Bauhaus\", text: \"包豪斯\" },\r\n    { key: \"Art Nouveau\", text: \"新艺术\" },\r\n    { key: \"Ukiyo-e\", text: \"浮世绘\" },\r\n    { key: \"Haida Art\", text: \"海达艺术\" },\r\n    { key: \"African Art\", text: \"非洲艺术\" },\r\n    { key: \"Indigenous Art\", text: \"土著艺术\" },\r\n    { key: \"Renaissance\", text: \"文艺复兴\" },\r\n  ];\r\n\r\n  const handleEditorChange = (newData: string) => {\r\n    setCopywriteHTML(newData);\r\n  };\r\n\r\n  const onArtStylesChange = (\r\n    event: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption,\r\n    index?: number\r\n  ): void => {\r\n    if (item) {\r\n      setArtStyle(\r\n        item.selected\r\n          ? [...artStyle, item.key as string]\r\n          : artStyle.filter((key) => key !== item.key)\r\n      );\r\n    }\r\n    console.log(\"artStyle:\" + artStyle);\r\n  };\r\n\r\n  const onTitleChange = (\r\n    _ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    newValue?: string\r\n  ) => {\r\n    console.log(\"title:\" + newValue);\r\n    setTitle(newValue || \"\");\r\n  };\r\n\r\n  const onTitleDescriptionChange = (\r\n    _ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    newValue?: string\r\n  ) => {\r\n    console.log(\"titleDescription:\" + newValue);\r\n    setTitleDescription(newValue || \"\");\r\n  };\r\n\r\n  const onParagraphsChange = (\r\n    _ev?: React.SyntheticEvent<HTMLElement, Event>,\r\n    newValue?: string\r\n  ) => {\r\n    setParagraphs(parseInt(newValue || \"5\"));\r\n  };\r\n\r\n  const onMaxParagraphLengthChange = (\r\n    _ev?: React.SyntheticEvent<HTMLElement, Event>,\r\n    newValue?: string\r\n  ) => {\r\n    setMaxParagraphLength(parseInt(newValue || \"100\"));\r\n  };\r\n  const onUseDalleChange = (\r\n    _ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setUseDalle(!!checked);\r\n  };\r\n\r\n  const generateCopywrite = async () => {\r\n    error && setError(undefined);\r\n    setIsLoading(true);\r\n    setCopywriteHTML(\"\");\r\n\r\n    if (!title) {\r\n      setError(\"标题不能为空\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (!titleDescription) {\r\n      setError(\"标题描述不能为空\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    dismissPanel();\r\n\r\n    try {\r\n      const request: CopywriteRequest = {\r\n        approach: \"gpt_with_dalle2\",\r\n        title: title,\r\n        titleDescription: titleDescription,\r\n        overrides: {\r\n          paragraphs: paragraphs,\r\n          maxParagraphLength: maxParagraphLength,\r\n          useDalle: useDalle,\r\n          artStyle: artStyle,\r\n        },\r\n      };\r\n      const result = await generateApi(request);\r\n      console.log(result.copywriteHTML);\r\n      setCopywriteHTML(result.copywriteHTML);\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.editorContainer}>\r\n        <Pivot className={styles.editor}>\r\n          <PivotItem headerText=\"编辑器\" itemIcon=\"Edit\" itemKey=\"editor\">\r\n            {isLoading && (\r\n              <>\r\n                <Label>正在生成文案，请稍候</Label>\r\n                <Spinner label=\"正在生成文案，请稍候\" />\r\n              </>\r\n            )}\r\n            {!isLoading && (\r\n              <>\r\n                <Editor data={copywriteHTML} onChange={handleEditorChange} />\r\n              </>\r\n            )}\r\n          </PivotItem>\r\n          <PivotItem headerText=\"预览\" itemIcon=\"Globe\" itemKey=\"preview\">\r\n            {error ? (\r\n              <div className={styles.previewContainer}>\r\n                <Stack tokens={verticalGapStackTokens}>\r\n                  <Text variant={\"xLarge\" as ITextProps[\"variant\"]}>\r\n                    <Icon iconName=\"Error\" /> 生成失败\r\n                  </Text>\r\n                  <Text>{error.toString()}</Text>\r\n                  <PrimaryButton onClick={generateCopywrite}>\r\n                    重试\r\n                  </PrimaryButton>\r\n                </Stack>\r\n              </div>\r\n            ) : (\r\n              <div className={styles.previewContainer}>\r\n                {<div dangerouslySetInnerHTML={{ __html: copywriteHTML }} />}\r\n              </div>\r\n            )}\r\n          </PivotItem>\r\n        </Pivot>\r\n      </div>\r\n      <div className={styles.commandsContainer}>\r\n        <PrimaryButton\r\n          className={styles.commandButton}\r\n          iconProps={{ iconName: \"Lightbulb\" }}\r\n          onClick={() => setIsConfigPanelOpen()}\r\n        >\r\n          文案配置\r\n        </PrimaryButton>\r\n      </div>\r\n      <div>\r\n        <div className={styles.chatRoot}>\r\n          <Panel\r\n            headerText=\"配置\"\r\n            isOpen={isConfigPanelOpen}\r\n            isBlocking={false}\r\n            closeButtonAriaLabel=\"Close\"\r\n            onRenderFooterContent={() => (\r\n              <div>\r\n                <PrimaryButton\r\n                  onClick={generateCopywrite}\r\n                  styles={buttonStyles}\r\n                  iconProps={{ iconName: \"Lightbulb\" }}\r\n                >\r\n                  生成\r\n                </PrimaryButton>\r\n                <DefaultButton onClick={dismissPanel}>取消</DefaultButton>\r\n              </div>\r\n            )}\r\n            onDismiss={dismissPanel}\r\n            isFooterAtBottom={true}\r\n          >\r\n            {error ? (\r\n              <>\r\n                <MessageBar\r\n                  messageBarType={MessageBarType.error}\r\n                  isMultiline={false}\r\n                  onDismiss={() => setError(undefined)}\r\n                  dismissButtonAriaLabel=\"Close\"\r\n                >\r\n                  {error.toString()}\r\n                </MessageBar>\r\n              </>\r\n            ) : null}\r\n            <TextField\r\n              className={styles.chatSettingsSeparator}\r\n              defaultValue={title}\r\n              label=\"文案标题\"\r\n              multiline\r\n              autoAdjustHeight\r\n              onChange={onTitleChange}\r\n              required={true}\r\n            />\r\n            <TextField\r\n              className={styles.chatSettingsSeparator}\r\n              defaultValue={titleDescription}\r\n              label=\"文案主要内容\"\r\n              multiline\r\n              autoAdjustHeight\r\n              onChange={onTitleDescriptionChange}\r\n              required={true}\r\n            />\r\n            <Separator />\r\n            <SpinButton\r\n              className={styles.chatSettingsSeparator}\r\n              labelPosition={Position.top}\r\n              label=\"文案分为几段\"\r\n              min={1}\r\n              max={50}\r\n              defaultValue={paragraphs.toString()}\r\n              onChange={onParagraphsChange}\r\n            />\r\n            <Separator />\r\n            <SpinButton\r\n              className={styles.chatSettingsSeparator}\r\n              labelPosition={Position.top}\r\n              label=\"每一段最多多少字\"\r\n              min={10}\r\n              max={500}\r\n              defaultValue={maxParagraphLength.toString()}\r\n              onChange={onMaxParagraphLengthChange}\r\n            />\r\n            <Separator />\r\n            <Checkbox\r\n              className={styles.chatSettingsSeparator}\r\n              checked={useDalle}\r\n              label=\"是否生成图片\"\r\n              onChange={onUseDalleChange}\r\n            />\r\n            {useDalle && (\r\n              <Dropdown\r\n                placeholder=\"选择图片风格\"\r\n                label=\"图片风格\"\r\n                selectedKeys={artStyle}\r\n                // eslint-disable-next-line react/jsx-no-bind\r\n                onChange={onArtStylesChange}\r\n                multiSelect\r\n                options={art_options}\r\n              />\r\n            )}\r\n          </Panel>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Copywrite;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport { initializeIcons } from \"@fluentui/react\";\nimport { initializeFileTypeIcons } from '@fluentui/react-file-type-icons';\ninitializeFileTypeIcons(/* optional base url */);\n\nimport \"./index.css\";\n\nimport Layout from \"./pages/layout/Layout\";\nimport Copywrite from \"./pages/copywrite/Copywrite\";\n\ninitializeIcons();\n\nexport default function App() {\n  return (\n      <HashRouter>\n          <Routes>\n              <Route path=\"/\" element={<Layout />}>\n                  <Route index element={<Copywrite />} />\n              </Route>\n          </Routes>\n      </HashRouter>\n  );\n}\n\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n"],"names":["github","Layout","jsxs","styles","jsx","Link","NavLink","isActive","Outlet","modules","formats","Editor","data","onChange","ReactQuill","generateApi","options","response","_a","_b","_c","_d","parsedResponse","buttonStyles","verticalGapStackTokens","Copywrite","isConfigPanelOpen","setIsConfigPanelOpen","dismissPanel","useBoolean","title","setTitle","useState","titleDescription","setTitleDescription","paragraphs","setParagraphs","maxParagraphLength","setMaxParagraphLength","useDalle","setUseDalle","isLoading","setIsLoading","error","setError","copywriteHTML","setCopywriteHTML","artStyle","setArtStyle","art_options","handleEditorChange","newData","onArtStylesChange","event","item","index","key","onTitleChange","_ev","newValue","onTitleDescriptionChange","onParagraphsChange","onMaxParagraphLengthChange","onUseDalleChange","checked","generateCopywrite","result","e","Pivot","PivotItem","Fragment","Label","Spinner","Stack","Text","Icon","PrimaryButton","Panel","DefaultButton","MessageBar","MessageBarType","TextField","Separator","SpinButton","Position","Checkbox","Dropdown","initializeFileTypeIcons","initializeIcons","App","HashRouter","Routes","Route","ReactDOM","React"],"mappings":"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"}